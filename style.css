*, ::before, ::after{ 
margin: 0;
padding: 0;
box-sizing: border-box;
}

:root{
    --mainColor : papayawhip;
    --victoryBackground : linear-gradient(green,lightgreen)
}
.carte {
    grid-area: carte;
    width: 200px;
    height: 300px;
    border-radius: 10px;
    margin: auto;
}

.carteDos {
    background: linear-gradient(goldenrod, black);
    box-shadow: 0 0 50px 5px goldenrod;
}

.carteFace {
    background: silver;
    border-radius: 10px;
    border: 1px solid black;
    box-shadow: inset 0 0 40px 2px black;
    display: flex;
    flex-direction: column;
    justify-content: space-around;
    align-items: center;
    color: white;
    transform: translateY(180deg);
}

.btn {
    padding: 10px 20px;
    background: black;
    color: white;
    letter-spacing: 2px;
    border: 1px solid white;
    border-radius: 5px;
    cursor: pointer;

}

.form {
    grid-area: form;
    z-index: 3;
    & > * {
        text-align: center;
        margin-bottom: 10px;
    }
    & input{
        padding:  1rem 0;
        font-size: 1.5rem;
        border-radius: 5px;
    }
}

.consigne{
    grid-area: txt;
    color: black;
}

.error {
    color: crimson;
}

.nbreTries{
    color: black;
    grid-area: try;
}

.answer {
    color: black;
    font-size: 4em;
    font-weight: bold;
    border: 5px solid black;
    border-radius: 90px;
    padding: 1rem;
    box-shadow: inset 0 0 10px 1px white, 0 0 10px 1px white;
}
main {
    
    font-size: 1.5rem;
    height: 100vh;
    background-color: var(--mainColor);
    text-align: center;
    display: grid;
    justify-content: space-evenly;
    align-items: center;
    grid-template-rows: repeat (7,1fr);
    grid-template-rows: 30px,1fr,30px;
    grid-template-areas:
        ". . ."
        ". carte ."
        ". try ."
        ". txt ."
        ". form ."
        ". . ."
        ". . .";
}

.victory, .fail{
    z-index: 2;
    display: none;
    position: absolute;
    width: 100vw;
    height: 100vh;
    opacity: 0.5;
    & img{
        width: 100%;
        height: 100%;
        object-fit: cover;
    }
}

.victory{
    transform: rotate(25deg);
    top: 0;
    left:150px;
}

.fail{
    /* transform: rotate(35deg); */
    top: 0;
    right: -0;
}

@keyframes turntofade {
    from {
        transform: rotateY(0deg);
        opacity: 1;
    }
    25% {
        opacity: 1;
    }
    33% {
        opacity: 0;
    }
    to {
        opacity: 0;
        transform: rotateY(-180deg);
    }
}
@keyframes turntoappear {
    from {
        transform: rotateY(-180deg);
        opacity: 0;
    }
    25% {
        opacity: 0;
    }
    33% {
        opacity: 1;
    }
    to {
        opacity: 1;
        transform: rotateY(0deg);
    }
}

